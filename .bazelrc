###############################
# Common settings
# These settings will apply for all configs
###############################
# Add a workspace status command to be available for targets that support stamping
# See: https://docs.bazel.build/versions/master/user-manual.html#workspace_status
build --workspace_status_command=./tools/workspace_status.sh
test --workspace_status_command=./tools/workspace_status.sh
run --workspace_status_command=./tools/workspace_status.sh

# Show timestamps in output
build --show_timestamps
test --show_timestamps
query --show_timestamps

# Strict deps for java deps
run --experimental_strict_java_deps=error
test --experimental_strict_java_deps=error
build --experimental_strict_java_deps=error

# Turn on --incompatible_strict_action_env which was on by default
# in Bazel 0.21.0 but turned off again in 0.22.0. Follow
# https://github.com/bazelbuild/bazel/issues/7026 for more details.
# This flag is needed to so that the bazel cache is not invalidated
# when running bazel via `yarn bazel`.
# See https://github.com/angular/angular/issues/27514.
build --incompatible_strict_action_env
test --incompatible_strict_action_env
run --incompatible_strict_action_env

# Only show output from errors in test runs
test --test_output=errors

# Enable disk cache for local builds
# This makes caching quicker when switching branches
# See: https://docs.bazel.build/versions/master/remote-caching.html#disk-cache
build --disk_cache=~/.cache/bazel-disk-cache
test --disk_cache=~/.cache/bazel-disk-cache
query --disk_cache=~/.cache/bazel-disk-cache
build --repository_cache=~/.cache/bazel-repository-cache
test --repository_cache=~/.cache/bazel-repository-cache
query --repository_cache=~/.cache/bazel-repository-cache

# Remote cache/execution via BuildBuddy
# You will also have to add these options to your .bazelrc.user file
# build --remote_header=x-buildbuddy-api-key=<you-api-key-here>
# test --remote_header=x-buildbuddy-api-key=<you-api-key-here>
# query --remote_header=x-buildbuddy-api-key=<you-api-key-here>
# aquery --remote_header=x-buildbuddy-api-key=<you-api-key-here>
# cquery --remote_header=x-buildbuddy-api-key=<you-api-key-here>
# run --remote_header=x-buildbuddy-api-key=<you-api-key-here>
build --bes_results_url=https://app.buildbuddy.io/invocation/
build --bes_backend=grpcs://cloud.buildbuddy.io
build --remote_cache=grpcs://cloud.buildbuddy.io
build --remote_timeout=3600
build --experimental_remote_downloader=grpcs://cloud.buildbuddy.io
test --bes_results_url=https://app.buildbuddy.io/invocation/
test --bes_backend=grpcs://cloud.buildbuddy.io
test --remote_cache=grpcs://cloud.buildbuddy.io
test --remote_timeout=3600
test --experimental_remote_downloader=grpcs://cloud.buildbuddy.io
query --bes_results_url=https://app.buildbuddy.io/invocation/
query --bes_backend=grpcs://cloud.buildbuddy.io
query --remote_cache=grpcs://cloud.buildbuddy.io
query --remote_timeout=3600
query --experimental_remote_downloader=grpcs://cloud.buildbuddy.io
aquery --bes_results_url=https://app.buildbuddy.io/invocation/
aquery --bes_backend=grpcs://cloud.buildbuddy.io
aquery --remote_cache=grpcs://cloud.buildbuddy.io
aquery --remote_timeout=3600
aquery --experimental_remote_downloader=grpcs://cloud.buildbuddy.io
cquery --bes_results_url=https://app.buildbuddy.io/invocation/
cquery --bes_backend=grpcs://cloud.buildbuddy.io
cquery --remote_cache=grpcs://cloud.buildbuddy.io
cquery --remote_timeout=3600
cquery --experimental_remote_downloader=grpcs://cloud.buildbuddy.io
run --bes_results_url=https://app.buildbuddy.io/invocation/
run --bes_backend=grpcs://cloud.buildbuddy.io
run --remote_cache=grpcs://cloud.buildbuddy.io
run --remote_timeout=3600
run --experimental_remote_downloader=grpcs://cloud.buildbuddy.io

# Set up remote execution config via BuildBuddy
build:remote --remote_executor=grpcs://cloud.buildbuddy.io
build:remote --host_platform=@buildbuddy_toolchain//:platform
build:remote --platforms=@buildbuddy_toolchain//:platform
build:remote --extra_execution_platforms=@buildbuddy_toolchain//:platform
build:remote --crosstool_top=@buildbuddy_toolchain//:toolchain
build:remote --extra_toolchains=@buildbuddy_toolchain//:cc_toolchain
build:remote --javabase=@buildbuddy_toolchain//:javabase_jdk8
build:remote --host_javabase=@buildbuddy_toolchain//:javabase_jdk8
build:remote --java_toolchain=@buildbuddy_toolchain//:toolchain_jdk8
build:remote --host_java_toolchain=@buildbuddy_toolchain//:toolchain_jdk8
build:remote --jobs=50
build:remote --disk_cache=
test:remote --remote_executor=grpcs://cloud.buildbuddy.io
test:remote --host_platform=@buildbuddy_toolchain//:platform
test:remote --platforms=@buildbuddy_toolchain//:platform
test:remote --extra_execution_platforms=@buildbuddy_toolchain//:platform
test:remote --crosstool_top=@buildbuddy_toolchain//:toolchain
test:remote --extra_toolchains=@buildbuddy_toolchain//:cc_toolchain
test:remote --javabase=@buildbuddy_toolchain//:javabase_jdk8
test:remote --host_javabase=@buildbuddy_toolchain//:javabase_jdk8
test:remote --java_toolchain=@buildbuddy_toolchain//:toolchain_jdk8
test:remote --host_java_toolchain=@buildbuddy_toolchain//:toolchain_jdk8
test:remote --jobs=50
test:remote --disk_cache=

# Load any settings specific to the current user.
# .bazelrc.user should appear in .gitignore so that settings are not shared with team members
# This needs to be last statement in this
# config, as the user configuration should be able to overwrite flags from this file.
# See https://docs.bazel.build/versions/master/best-practices.html#bazelrc
# (Note that we use .bazelrc.user so the file appears next to .bazelrc in directory listing,
# rather than user.bazelrc as suggested in the Bazel docs)
try-import %workspace%/.bazelrc.user
